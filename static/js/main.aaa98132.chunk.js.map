{"version":3,"sources":["AppDataGrid.js","App.js","index.js"],"names":["AppDataGrid","props","style","margin","name","arrData","map","item","id","NameCompany","App","useState","arrComponents","setArrComponents","getData","fetch","res","status","Error","json","user","console","log","error","addNew","alert","dd","Date","params","toLocaleString","getSeconds","options","method","body","JSON","stringify","headers","response","className","onClick","index","rootElement","document","getElementById","createRoot","render"],"mappings":"+KACe,SAASA,EAAYC,GACpC,OACO,sBAAKC,MAAO,CAACC,OAAQ,UAArB,UACK,6CAAgBF,EAAMG,QACtB,gCACMH,EAAMI,QAAQC,KAAK,SAACC,GAAD,OACnB,gCAAqB,+BAAI,6BAAKA,EAAKC,KAAQ,6BAAKD,EAAKE,kBAAzCF,EAAKC,GADE,QAKlC,C,MCPY,SAASE,IAExB,IAEA,EAAsCC,mBAAS,CAACX,EAF/B,CAACI,KAAK,QAASC,QAAQ,CAAC,CAACG,GAAG,EAAIC,YAAY,gBAE7D,mBAAKG,EAAL,KAAoBC,EAApB,KAGIC,EAAO,iDAAC,yHAEQC,MAAM,+DAFd,aAEJC,EAFI,QAIAC,QAAU,KAJV,sBAIuB,IAAIC,MAAM,4BAJjC,uBAKWF,EAAIG,OALf,OAKFC,EALE,OAMRC,QAAQC,IAAI,YAAYF,GAExBP,EAAiB,CAACb,EADJ,CAACI,KAAK,OAAQC,QAAQe,MAP5B,kDASOC,QAAQE,MAAR,MATP,0DAAD,qDAYPC,EAAM,iDAAC,6GAEXC,MAAM,QACFC,EAAG,IAAIC,KACLC,EAAU,CAACnB,YAAaiB,EAAGG,iBAAiB,KAAKH,EAAGI,cAJ/C,SAMDC,EAAU,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CAAC,eAAgB,mBAAmB,OAAU,qBATlE,SAYcrB,MAAM,+DAAgEgB,GAZpF,UAYHM,EAZG,OAaPhB,QAAQC,IAAI,YAAae,EAAW,IAAIV,QACpCU,EAASpB,QAAU,KAdhB,uBAc6B,IAAIC,MAAM,iCAdvC,yBAgBOmB,EAASlB,OAhBhB,QAgBHH,EAhBG,OAiBPK,QAAQC,IAAI,OAAQN,EAAM,IAAIW,MAjBvB,kDAkBaN,QAAQE,MAAR,MAlBb,0DAAD,qDAyBV,OACG,sBAAKe,UAAU,MAAf,UACE,mDACA,wBAAQA,UAAU,MAAMC,QAASzB,EAAjC,sBACA,wBAAQwB,UAAU,MAAMC,QAASf,EAAjC,qBAECZ,EAAcN,KAAK,SAACC,EAAKiC,GAAN,OAAe,oCAAmBjC,EAAnB,MAAUiC,EAAzB,MAIxB,CCrDD,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACnC,EAAD,M","file":"static/js/main.aaa98132.chunk.js","sourcesContent":["\r\nexport default function AppDataGrid(props) {\r\nreturn( \r\n       <div style={{margin: \"0 auto\"}}>\r\n            <h2>Data grid: {props.name}</h2>\r\n            <table>\r\n                 {props.arrData.map( (item)=> \r\n                  <tbody key={item.id}><tr><td>{item.id}</td><td>{item.NameCompany}</td></tr></tbody> )}\r\n            </table>\r\n        </div>\r\n       );\r\n  }\r\n      \r\n","import { useState , useContext} from \"react\";\nimport AppDataGrid from \"./AppDataGrid\";\nimport \"./styles.css\";\n\nexport default function App() {\n\nlet objPropsInit={name:\"Empty\", arrData:[{id:0 , NameCompany:'No data'}]};\n\nlet [arrComponents, setArrComponents]=useState([AppDataGrid(objPropsInit)]) ;  \n\n\nlet getData=async () =>{\ntry{\n    let res = await fetch(\"https://cors.eu.org/\"+\"https://vercel-node-app5.vercel.app/p67\");\n    // const res = await fetch(\"http://localhost:3001/p9\");\n    if (res.status >= 400) { throw new Error(\"Bad response from server\"); }\n    const user = await res.json();\n    console.log('user***>>',user);\n    let objProps1={name:\"Data\", arrData:user};\n    setArrComponents([AppDataGrid(objProps1)]) ;\n   } catch (err) { console.error(err);  }  \n} \n\nlet addNew=async () =>{\n\nalert(\"post\") ;  \nlet dd=new Date();  \nconst params =  {NameCompany: dd.toLocaleString()+'__'+dd.getSeconds()};\ntry {\n    const options = {\n                      method: 'POST',\n                      body: JSON.stringify(params),\n                      headers: {'Content-Type': 'application/json','Accept': 'application/json' }\n                    }\n    //var response = await fetch(\"http://localhost:3001/p200\", options );\n    let response = await fetch(\"https://cors.eu.org/https://vercel-node-app5.vercel.app/p200\", options );\n    console.log('response=', response , new Date()) ; \n    if (response.status >= 400) { throw new Error(\"Bad post response from server\"); }\n        \n    var res=await response.json() ;\n    console.log('res=', res , new Date()) ; \n    }  catch (err) {    console.error(err);  }\n} \n  \n\n\n\n\nreturn (\n   <div className=\"App\">\n     <h1>Hello CodeSandbox</h1>\n     <button className=\"bt1\" onClick={getData}>Get Data</button> \n     <button className=\"bt1\" onClick={addNew}>Add New</button> \n     \n     {arrComponents.map( (item,index)=> <div key={index}> {item} </div> )}\n     {/* {[ arrComponents          ]}   */}\n  </div>\n);\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}